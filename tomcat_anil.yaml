- name : create an app layer
  hosts : DEV
  become : yes
  tags :
    - APP
  vars :
    TOMCAT_URL : http://mirrors.estointernet.in/apache/tomcat/tomcat-9/v9.0.21/bin/apache-tomcat-9.0.21.tar.gz
    
    USERNAME : student
    TOMCAT_DIR : /tomcat
  tasks :
    - name : Install JAVA
      yum :
        name : java
        state : latest

    - name : Define tomcat variable
      shell : "echo {{TOMCAT_URL}} | awk -F / '{print $NF}' | sed -e 's/.tar.gz//g'"
      register : out

    - name : create tomcat variable
      set_fact :
        TOMCAT_HOME_DIR : "{{out.stdout}}"
       
    - name : define WAR & JDBC
      set_fact :
        WAR :
          URL : https://github.com/devops2k18/DevOpsDecember/raw/master/APPSTACK/student.war
          LOC : "{{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/webapps"
        JDBC :
          URL : https://github.com/devops2k18/DevOpsDecember/raw/master/APPSTACK/mysql-connector-java-5.1.40.jar
          LOC : "{{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/lib"


    - name : create the {{USERNAME}} user
      user :
        name : "{{USERNAME}}"

    - name : create tomcat directory
      file :
        path : "{{TOMCAT_DIR}}"
        owner : "{{USERNAME}}"
        group : "{{USERNAME}}"
        mode : 0755
        state : directory

    - name : Download and extract tomcat
      unarchive :
        src : "{{TOMCAT_URL}}"
        dest : "{{TOMCAT_DIR}}"
        remote_src: yes
      become_user : "{{USERNAME}}"

    - name : find files from webapps
      find :
        paths : "{{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/webapps"
        file_type : any
      register : out

    - name : remove the files from webapps
      file :
        path : "{{item.path}}"
        state : absent
      with_items : "{{out.files}}"

    - name : check war URL
      debug :
        msg : "{{WAR.URL}}"

    - name : download WAR & JDBC
      get_url :
        url : "{{item.URL}}"
        dest : "{{item.LOC}}"
      with_items :
        - "{{WAR}}"
        - "{{JDBC}}"

    - name : update the context.xml
      blockinfile :
        path : "{{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/conf/context.xml"
        block : |
          <Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource" maxTotal="100" maxIdle="30" maxWaitMillis="10000" username="student" password="student@1" driverClassName="com.mysql.jdbc.Driver" url="jdbc:mysql://10.160.0.37:3306/studentqaapp"/>
        insertbefore : </Context>

    - name : check tomcat running or not
      shell : ps -ef | grep java | grep tomcat | grep -v grep
      register : out
      ignore_errors : True

    - name : restart tomcat
      shell : "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/bin/shutdown.sh && nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/bin/startup.sh"
      when : out.rc == 0

    - name : start tomcat
      shell : "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME_DIR}}/bin/startup.sh"
      when : out.rc != 0

- name : create schema and tables for student
  hosts : DB
  become : yes
  tasks :
    - name : install mysql_python
      yum :
        name : MySQL-python
        state : latest
        
    - name : define DEV DB variables
      tags :
        - DEV
      set_fact :
        #DB_HOST : mariadb-server
        DB_NAME : studentqaapp
        DB_USER : student
        DB_PASSWORD : student@1
        #APP_HOST : student-dev-app-server

    # - name : define QA DB variables
    #   tags :
    #     - QA
    #   set_fact :
    #     DB_HOST : mariadb-server
    #     DB_SCHEMA : studentqaapp
    #     DB_USER : student
    #     DB_PASSWORD : student@1
    #     APP_HOST : student-qa-app-server

    # - name : define PROD DB variables
    #   tags :
    #     - PROD
    #   set_fact :
    #     DB_HOST : mariadb-server
    #     DB_SCHEMA : studentprodapp
    #     DB_USER : student
    #     DB_PASSWORD : student@1
    #     APP_HOST : student-prod-app-server

    - name : template the studentapp.sql
      tags :
        - always
      template :
        src : /var/lib/jenkins/files/studentapp.sql.j2
        dest : /tmp/studentapp.sql

    - name : run studentapp.sql
      tags :
        - always
      mysql_db :
        state : import
        name : all
        target : /tmp/studentapp.sql





   

    

